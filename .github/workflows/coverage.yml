name: Code Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          pkg-config \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          libx11-dev \
          libxrandr-dev \
          libxinerama-dev \
          libxcursor-dev \
          libxi-dev \
          libxxf86vm-dev \
          xvfb \
          gcov \
          lcov

    - name: Configure CMake with coverage
      run: |
        cmake -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_CXX_FLAGS="--coverage -fprofile-arcs -ftest-coverage" \
          -DCMAKE_C_FLAGS="--coverage -fprofile-arcs -ftest-coverage" \
          -DCMAKE_EXE_LINKER_FLAGS="--coverage"

    - name: Build
      run: cmake --build build

    - name: Run tests with coverage
      run: |
        xvfb-run -a ./build/tests/BoxelGameTests

    - name: Generate coverage report
      run: |
        # Create coverage directory
        mkdir -p coverage
        
        # Generate gcov files
        find build -name "*.gcno" -exec gcov {} \;
        
        # Generate lcov report
        lcov --capture --directory build --output-file coverage/coverage.info
        
        # Filter out external libraries and test files
        lcov --remove coverage/coverage.info \
          '/usr/*' \
          '*/build/_deps/*' \
          '*/extern/*' \
          '*/tests/*' \
          --output-file coverage/coverage_filtered.info
        
        # Generate HTML report
        genhtml coverage/coverage_filtered.info --output-directory coverage/html

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/coverage_filtered.info
        fail_ci_if_error: false
        verbose: true

    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
        retention-days: 30

    - name: Coverage Summary
      run: |
        echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
        lcov --summary coverage/coverage_filtered.info 2>&1 | \
          grep -E "(lines|functions|branches)" >> $GITHUB_STEP_SUMMARY || true