name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            preset: linux-debug
            build_type: Debug
          - os: ubuntu-latest
            preset: linux-release
            build_type: Release
          - os: windows-latest
            preset: windows-debug
            build_type: Debug
          - os: windows-latest
            preset: windows-release
            build_type: Release

    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential cmake ninja-build pkg-config \
          libegl1-mesa-dev libgl1-mesa-dev libgles2-mesa-dev \
          libx11-dev libxrandr-dev libxcursor-dev libxi-dev \
          libwayland-dev libxkbcommon-dev wayland-protocols xvfb

    - name: Setup MSVC (Windows)
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v2

    - name: Configure CMake
      run: |
        cmake --preset ${{ matrix.preset }}

    - name: Build (Linux)
      if: runner.os == 'Linux'
      run: |
        cmake --build build/${{ matrix.preset }}

    - name: Build (Windows)
      if: runner.os == 'Windows'
      run: |
        cmake --build build/${{ matrix.preset }} --config ${{ matrix.build_type }}

    - name: Run tests (Linux)
      if: runner.os == 'Linux'
      run: |
        if [ -f "./build/${{ matrix.preset }}/tests/BoxelGameTests" ]; then
          xvfb-run -a ./build/${{ matrix.preset }}/tests/BoxelGameTests
        else
          echo "Test executable not found at ./build/${{ matrix.preset }}/tests/BoxelGameTests"
          exit 1
        fi

    - name: Run tests (Windows)
      if: runner.os == 'Windows'
      run: |
        $testPath = "./build/${{ matrix.preset }}/tests/${{ matrix.build_type }}/BoxelGameTests.exe"
        if (Test-Path $testPath) {
          & $testPath
        } else {
          Write-Host "Test executable not found at $testPath"
          exit 1
        }


    - name: Upload build artifacts
      if: matrix.build_type == 'Release'
      uses: actions/upload-artifact@v4
      with:
        name: BoxelGame-${{ matrix.os }}-${{ matrix.build_type }}
        path: build/${{ matrix.preset }}/bin/
        retention-days: 30

  release:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/BoxelGame*
        body: |
          ## BoxelGame Release
          
          Cross-platform voxel sandbox game engine built with C++23 and Modern OpenGL.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

